<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">

    <!-- Enable access to user's location -->
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/>
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE_LOCATION" />

    <!-- Enable access to the internet for... not really sure yet... -->
    <uses-permission android:name="android.permission.INTERNET"/>

    <application
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.BCITCampusCompass"
        tools:targetApi="31"
        android:largeHeap="true">

        <activity
            android:name=".MainActivity"
            android:exported="true">

            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <!--
            Note: com.google.android.geo.API_KEY is the recommended metadata name for the API key.
            A key with this name can be used to authenticate to multiple Google Maps-based APIs on
            the Android platform, including the Maps SDK for Android. For backwards compatibility,
            the API also supports the name com.google.android.maps.v2.API_KEY. This legacy name
            allows authentication to the Android Maps API v2 only. An application can specify only
            one of the API key metadata names. If both are specified, the API throws an exception.
        -->
        <meta-data
            android:name="com.google.android.geo.API_KEY"
            android:value="${MAPS_API_KEY}" />

        <meta-data
            android:name="com.google.android.gms.version"
            android:value="@integer/google_play_services_version" />

        <!--
            If you are using com.google.android.gms:play-services-maps:16.0.0 or below and your
            app is targeting API level 28 (Android 9.0) or above, you must include the following
            declaration within the <application> element of AndroidManifest.xml. Otherwise, skip
            this declaration.

            Question: Are we using com.google.android.gms:play-services-maps:16.0.0 or below?
            Answer: No.
        -->
        <uses-library
            android:name="org.apache.http.legacy"
            android:required="false" />
    </application>
</manifest>